// Generated by Xata Codegen 0.29.0. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "messages",
    columns: [
      { name: "chatId", type: "link", link: { table: "chats" } },
      { name: "content", type: "text", notNull: true, defaultValue: "null" },
      {
        name: "createdAt",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
      { name: "role", type: "string", notNull: true, defaultValue: "null" },
      { name: "userId", type: "string", notNull: true, defaultValue: "null" },
    ],
  },
  {
    name: "chats",
    columns: [
      { name: "chatName", type: "text", notNull: true, defaultValue: "null" },
      { name: "userId", type: "string" },
      {
        name: "createdAt",
        type: "datetime",
        notNull: true,
        defaultValue: "now",
      },
    ],
    revLinks: [{ column: "chatId", table: "messages" }],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Messages = InferredTypes["messages"];
export type MessagesRecord = Messages & XataRecord;

export type Chats = InferredTypes["chats"];
export type ChatsRecord = Chats & XataRecord;

export type DatabaseSchema = {
  messages: MessagesRecord;
  chats: ChatsRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Ashraf-s-workspace-k9k2c2.eu-west-1.xata.sh/db/chat-app",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
